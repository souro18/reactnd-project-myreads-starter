{"version":3,"sources":["loader.js","Login.js","Auth.js","App.js","redux-module/reducer.js","redux-module/store.js","index.js","redux-module/action-creator.js","BooksAPI.js","redux-module/contants.js","icons/login.jpg"],"names":["Loader","className","loginSchema","Yup","shape","email","required","password","connect","state","console","log","error","dispatch","onSuccess","user","setUser","invalidateState","invalidate","props","useState","setError","useEffect","location","src","loginImage","alt","initialValues","validationSchema","onSubmit","values","data","login","then","res","sessionStorage","setItem","token","history","push","catch","e","response","errors","touched","msg","htmlFor","id","name","placeholder","type","value","to","isLogged","isLoggedIn","pathname","AllBooks","lazy","MyReads","Register","BooksApp","fallback","path","component","render","Auth","React","Component","defaultState","getItem","books","read","wantToRead","currentlyReading","searchedBooks","filterBooks","filter","book","userReducer","action","SET_USER","payload","SET_ERROR","SET_BOOK","SET_SEARCHED","length","map","currentBook","title","volumeInfo","authors","imageLinks","previewLink","description","thumbnail","replace","isExisting","find","b","UPDATE_SEARCHED_BOOK","updatedBooks","isNew","UPDATE_BOOK","updatedBook","_id","filteredBooks","INVALIDATE","removeItem","store","createStore","ReactDOM","document","getElementById","setBook","setSearchBook","updateSearchBook","updateBook","api","process","API","getHeaders","APIheader","search","query","axios","get","items","register","post","json","addBook","headers","put","getAllBooks","module","exports"],"mappings":"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","file":"static/js/main.e0dd1bd9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"full-screen\">\r\n            <p>Loading...........</p>\r\n        </div>\r\n    )\r\n};\r\nexport default Loader;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { login } from './BooksAPI';\r\nimport { invalidate, setUser } from './redux-module/action-creator';\r\n\r\nimport loginImage from './icons/login.jpg'\r\n\r\nconst loginSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email('Invalid email')\r\n      .required('Required'),\r\n    password: Yup.string().required(\"This field is required\"),\r\n  });\r\nconst Login = props => {\r\n    const [error , setError ] = useState({});\r\n    useEffect(() => {\r\n        props.invalidateState()\r\n    }, [props.location]);\r\n    const onLogin = data => {\r\n        login(data)\r\n        .then(res => {\r\n            sessionStorage.setItem(\"token\", res.data.token)\r\n            props.onSuccess(res.data.user);\r\n            props.history.push('/dashboard');\r\n        })\r\n        .catch(e => {console.log(e); e.response && setError(e.response.data)})\r\n    }\r\n    return (\r\n        <div className=\"main\">\r\n            <section className=\"sign-in\">\r\n            <div className=\"container\">\r\n                <div className=\"signin-content\">\r\n                    <div className=\"signin-image\">\r\n                        <img src={loginImage} className='img-responsive' alt=\"sing up\" />\r\n                    </div>\r\n\r\n                    <div className=\"signin-form\">\r\n                        <h2 className=\"form-title\">Sign in</h2>\r\n                        <Formik\r\n                            initialValues={{\r\n                                email: '',\r\n                                password: '',\r\n                            }}\r\n                            validationSchema={loginSchema}\r\n                            onSubmit={values => {\r\n                                onLogin(values);\r\n                            }}\r\n                        >\r\n                            {({ errors, touched }) => (\r\n                        <Form>\r\n                            {error && <div className=\"error-block\">{error.msg}</div>}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\"><i className=\"zmdi zmdi-account material-icons-name\"></i></label>\r\n                                <Field\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Your Email\"\r\n                                    type=\"email\"\r\n                                />\r\n                                {touched.email && errors.email && <div className=\"error\">{errors.email}</div>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password\"><i className=\"zmdi zmdi-lock\"></i></label>\r\n                                <Field id=\"password\" name=\"password\" type=\"password\" placeholder=\"password\" />\r\n                                {touched.password && errors.password && <div className=\"error\">{errors.password}</div>}\r\n                            </div>\r\n                            <div className=\"form-group form-button\">\r\n                                <input type=\"submit\" name=\"signin\" id=\"signin\" className=\"form-submit\" value=\"Log in\"/>\r\n                            </div>\r\n                        </Form>\r\n                            )}\r\n                        </Formik>\r\n                        <div className=\"signup-image-link\">\r\n                            <span>Not a member yet? </span> \r\n                            <Link to=\"/register\">Create an account</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        </div>\r\n        )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    // const menu = state.menuReducer;\r\n    console.log(state)\r\n    return { error: state.error }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      onSuccess: (user) => {\r\n        dispatch(setUser(user))\r\n      },\r\n      invalidateState: () => {\r\n          dispatch(invalidate());\r\n      }\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Auth = props => {\r\n\r\n    const redirectToLogin = () => {\r\n        if(!props.isLogged && props.location.pathname !== '/register') {\r\n            props.history.push('/login');\r\n        } \r\n    }\r\n   useEffect(() => redirectToLogin(), [props.location])\r\n\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return { isLogged: state.isLoggedIn }\r\n}\r\nexport default connect(mapStateToProps, null)(Auth);","import React, {lazy, Suspense} from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport './App.css'\r\n\r\nimport Loader from './loader';\r\nimport Login from './Login';\r\nimport Auth from './Auth';\r\nconst AllBooks = lazy(()=> import('./AllBooks')); \r\nconst MyReads = lazy(() => import('./myReads'));\r\nconst Register = lazy(() => import('./Register'));\r\n\r\nclass BooksApp extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Suspense fallback={<Loader/>}>\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/login\" render={props => <Login {...props} />} />\r\n          <Route path=\"/\" component={Auth} />\r\n            <Route path=\"/search\" component={AllBooks} />\r\n            <Route path=\"/dashboard\" component={MyReads}/>\r\n        </Suspense>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import { SET_USER, SET_ERROR, SET_BOOK, SET_SEARCHED, UPDATE_BOOK, UPDATE_SEARCHED_BOOK, INVALIDATE } from './contants';\r\n\r\nconst isSessionPresent = () => {\r\n    return sessionStorage.getItem(\"token\") ? true: false;\r\n}\r\nconst defaultState = {\r\n    user: {},\r\n    error: {},\r\n    isLoggedIn: isSessionPresent(),\r\n    books: [],\r\n    read: [],\r\n    wantToRead: [],\r\n    currentlyReading: [],\r\n    searchedBooks: []\r\n}\r\n\r\nconst filterBooks = (books) => {\r\n    const currentlyReading = books.filter(book => book.state === \"currentlyReading\");\r\n    const wantToRead = books.filter(book => book.state === \"wantToRead\");\r\n    const read = books.filter(book => book.state === \"read\");\r\n    return { currentlyReading,  wantToRead, read}\r\n}\r\n\r\nconst userReducer = (state= defaultState,action) => {\r\n    switch(action.type) {\r\n        case SET_USER:\r\n            return {...state, user: {...action.payload}, isLoggedIn: true}\r\n        case SET_ERROR:\r\n            return {...state, error: action.payload}\r\n        case SET_BOOK:\r\n            const books = action.payload.data.books;\r\n            const { currentlyReading,  wantToRead, read} = filterBooks(books);\r\n            return { ...state, books, currentlyReading, wantToRead, read};\r\n        case SET_SEARCHED:\r\n            if(!action.payload || action.payload.length === 0) {\r\n                return {...state, searchedBooks: []}\r\n            }\r\n            const searchedBooks = action.payload.map(currentBook => {\r\n                const book = {\r\n                    title: currentBook.volumeInfo.title,\r\n                    authors: currentBook.volumeInfo.authors,\r\n                    imageLinks: currentBook.volumeInfo.imageLinks || {},\r\n                    previewLink: currentBook.volumeInfo.previewLink,\r\n                    description: currentBook.volumeInfo.description,\r\n                }\r\n                book.imageLinks.thumbnail = book.imageLinks.thumbnail ? book.imageLinks.thumbnail.replace(\"http:\", \"https:\") : null;\r\n                const isExisting = state.books.find(b => (b.title === book.title && book.authors[0] === b.authors[0]));\r\n                isExisting? book.state = isExisting.state : book.state = \"none\";\r\n                return book;\r\n            })\r\n            return {...state, searchedBooks };\r\n        case UPDATE_SEARCHED_BOOK:\r\n            const updatedBooks = state.searchedBooks.map(book => {\r\n                if(book.title === action.payload.title && book.authors[0] === action.payload.authors[0]) {\r\n                    book.state = action.payload.state;\r\n                }\r\n                return book;\r\n            })\r\n            if(action.isNew) {\r\n                return {...state, searchedBooks: updatedBooks, books: [...state.books, { ...action.payload}]}\r\n            }\r\n            return {...state, searchedBooks: updatedBooks}\r\n        case UPDATE_BOOK:\r\n            const updatedBook = state.books.map(book => {\r\n                if(book._id === action.payload._id) {\r\n                    book.state = action.payload.state;\r\n                }\r\n                return book;\r\n            })\r\n            const filteredBooks = filterBooks(updatedBook);\r\n            return {...state,\r\n                books: updatedBook, ...filteredBooks}\r\n\r\n        case INVALIDATE:\r\n            sessionStorage.removeItem(\"token\");\r\n            return defaultState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default userReducer;","import {createStore} from 'redux';\r\n\r\nimport userReducer from './reducer'\r\nconst store = createStore(userReducer);\r\n\r\nexport default store;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport App from './App'\r\nimport store from './redux-module/store';\r\nimport {Provider} from 'react-redux';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t<Router>\r\n\t\t\t<App />\r\n\t</Router>\r\n\t</Provider>\r\n\t, document.getElementById('root'))\r\n","import { SET_USER, SET_ERROR, SET_BOOK, SET_SEARCHED, UPDATE_BOOK, UPDATE_SEARCHED_BOOK, INVALIDATE} from './contants';\r\n\r\nconst setUser = user => {\r\n    return {\r\n        type: SET_USER,\r\n        payload: user\r\n    }\r\n}\r\n\r\nconst setError = error => {\r\n    return {\r\n        type: SET_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nconst setBook = books => {\r\n    return {\r\n        type: SET_BOOK,\r\n        payload: books\r\n    }\r\n}\r\n\r\nconst invalidate = () => {\r\n    return {\r\n        type: INVALIDATE,\r\n    }\r\n}\r\n\r\nconst setSearchBook = books => {\r\n    return {\r\n        type: SET_SEARCHED,\r\n        payload: books\r\n    }\r\n}\r\n\r\nconst updateSearchBook = (book, isNew) => {\r\n    return {\r\n        type: UPDATE_SEARCHED_BOOK,\r\n        payload: book,\r\n        isNew\r\n    }\r\n}\r\n\r\nconst updateBook = book => {\r\n    return {\r\n        type: UPDATE_BOOK,\r\n        payload: book\r\n    }\r\n}\r\n\r\nexport { setUser, setError,setBook , setSearchBook, updateSearchBook, updateBook, invalidate};","import axios from 'axios';\r\n\r\nconst api = `https://books.googleapis.com/books/v1/volumes?key=${process.env.REACT_APP_GOOGLE_API_KEY}&maxResults=20&q=`\r\nconst API = \"https://myread-apps.herokuapp.com/\"\r\n\r\nconst getHeaders = () => {\r\n  return {\r\n  'Accept': 'application/json',\r\n  'Authorization': sessionStorage.getItem(\"token\"),\r\n}\r\n}\r\n\r\nconst APIheader = {\r\n  'Accept': 'application/json',\r\n}\r\n\r\nexport const search = (query) => {\r\n  return axios.get(`${api}${query}`, { APIheader})\r\n  .then(res => res.data.items)\r\n}\r\n\r\n\r\nexport const register = (data) => {\r\n  return axios.post(API+ 'user/register', data, { APIheader })\r\n    .then(res => res.json())\r\n}\r\n\r\nexport const login = (data) => {\r\n  return axios.post(API+ 'user/login', data, { APIheader })\r\n}\r\n\r\nexport const addBook = (data) => {\r\n  const headers = getHeaders();\r\n  return axios.post(API+ 'book', data, { headers });\r\n}\r\n\r\nexport const updateBook = (data) => {\r\n  const headers = getHeaders();\r\n  return axios.put(API+ 'book', data, { headers })\r\n}\r\n\r\nexport const getAllBooks = () => {\r\n  const headers = getHeaders();\r\n  return axios.get(API+ 'books', { headers });\r\n}\r\n","const SET_USER='SET_USER';\r\nconst SET_ERROR='SET_ERROR';\r\nconst SET_BOOK='SET_BOOK';\r\nconst INVALIDATE='INVALIDATE';\r\nconst SET_SEARCHED='SET_SEARCHED';\r\nconst UPDATE_BOOK='UPDATE_BOOK';\r\nconst UPDATE_SEARCHED_BOOK= 'UPDATE_SEARCHED_BOOK'\r\n\r\nexport { SET_USER, SET_ERROR, SET_BOOK,SET_SEARCHED, UPDATE_BOOK, UPDATE_SEARCHED_BOOK, INVALIDATE};","module.exports = __webpack_public_path__ + \"static/media/login.956392f1.jpg\";"],"sourceRoot":""}