{"version":3,"sources":["Book.js","AllBooks.js"],"names":["Book","props","className","style","width","height","book","imageLinks","thumbnail","src","alt","title","onChange","event","updateBook","target","value","defaultValue","disabled","state","authors","previewLink","href","AllBooks","debounce","fn","time","timer","context","this","args","arguments","clearTimeout","setTimeout","apply","updateQuery","query","trim","BooksAPI","then","res","onBooksLoaded","addBook","existingBook","books","find","b","onBookAdded","data","debouncedUpdate","to","pathname","type","placeholder","searchedBooks","length","map","key","id","React","Component","connect","dispatch","setSearchBook","isNew","updateSearchBook"],"mappings":"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","file":"static/js/3.2c18e976.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Book = (props) => {\r\n\treturn (\r\n\t\t<div className=\"book\">\r\n\t\t\t<div className=\"book-top\">\r\n\t\t\t<div className=\"book-cover\" style={{ width: 128, height: 193}}>\r\n\t\t\t\t{(props.book.imageLinks.thumbnail)?\r\n\t\t\t\t(<img src={props.book.imageLinks.thumbnail} className=\"book-img\" alt={props.book.title}/>):\r\n\t\t\t\t(<div className=\"book-img image-placeholder\"></div>)\r\n\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"book-shelf-changer\">\r\n\t\t\t\t<select onChange={(event)=>\r\n\t\t\t\tprops.updateBook(props.book,event.target.value)} defaultValue=\"move\">\r\n\t\t\t\t<option value=\"move\" disabled>Move to...</option>\r\n\t\t\t\t<option value=\"currentlyReading\" className={(props.book.state ==='currentlyReading')? 'selected-shelf' : null}>Currently Reading</option>\r\n\t\t\t\t<option value=\"wantToRead\" className={(props.book.state==='wantToRead')? 'selected-shelf' : null}>Want to Read</option>\r\n\t\t\t\t<option value=\"read\" className={(props.book.state==='read')? 'selected-shelf' : null}>Read</option>\r\n\t\t\t\t<option value=\"none\" className={(props.book.state ==='none')? 'selected-shelf' : null}>None</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"book-title\">{props.book.title}</div>\r\n\t\t\t<div className=\"book-authors\">{props.book.authors}</div>\r\n\t\t\t{\r\n\t\t\t\tprops.book.previewLink && (\r\n\t\t\t\t\t<a href={props.book.previewLink} target=\"_blank\" className=\"book-link\">\r\n\t\t\t\t\t\t<span>Read More</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\nexport default Book;","import React from 'react';\r\nimport Book from './Book'\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { setSearchBook, updateSearchBook } from './redux-module/action-creator';\r\nimport * as BooksAPI from './BooksAPI';\r\n\r\nclass AllBooks extends React.Component {\r\n\r\n  debounce = (fn, time) => {\r\n    let timer;\r\n    return function() {\r\n      const context = this;\r\n      const args = arguments;\r\n      clearTimeout(timer);\r\n      timer = setTimeout(()=>fn.apply(context,args), time);\r\n    }\r\n  }\r\n\r\n  updateQuery=(query)=>{\r\n    query =query.trim()\r\n    if(query) {\r\n      BooksAPI.search(query).then((res)=> {\r\n        this.props.onBooksLoaded(res)\r\n      })\r\n    }\r\n  }\r\n\r\n  addBook=(book, state) => {\r\n    const existingBook = this.props.books.find((b)=>{\r\n      return (b.title === book.title && book.authors[0] === b.authors[0])\r\n    });\r\n    book.state = state;\r\n    if(existingBook) {\r\n      BooksAPI.updateBook(book).then((res) => {\r\n        this.props.onBookAdded(book, false)\r\n      })\r\n    } else {\r\n      BooksAPI.addBook(book).then((res) => {\r\n        this.props.onBookAdded(res.data.book, true)\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const debouncedUpdate = this.debounce(this.updateQuery, 200);\r\n\t\treturn (\r\n\t\t\t<div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to={{\r\n                pathname: '/dashboard',\r\n              }} className=\"close-search\">\r\n                Close\r\n              </Link>\r\n            <div className=\"search-books-input-wrapper\"> \r\n              <input type=\"text\" placeholder=\"Search by title or author\"\r\n              onChange={(event)=>debouncedUpdate(event.target.value)}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"search-books-results\">\r\n            {this.props.searchedBooks.length !== 0 ? (\r\n              <ol className=\"books-grid\">\r\n                {this.props.searchedBooks.map((book)=>{\r\n                    return <li key={book.id}><Book book={book}\r\n                    updateBook={this.addBook}/></li>\r\n              }\r\n              )}\r\n            </ol>\r\n\r\n            ):(\r\n            <p>No Matched Results</p>\r\n            )}\r\n          </div>\r\n      </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    books: state.books,\r\n    searchedBooks: state.searchedBooks,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onBooksLoaded: (books) => {\r\n      dispatch(setSearchBook(books))\r\n    },\r\n    onBookAdded: (book, isNew) => {\r\n      dispatch(updateSearchBook(book, isNew))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllBooks);;"],"sourceRoot":""}