{"version":3,"sources":["Book.js","myReads.js"],"names":["Book","props","className","style","width","height","book","imageLinks","thumbnail","src","alt","title","onChange","event","updateBook","target","value","defaultValue","disabled","state","authors","previewLink","href","connect","user","isLogged","isLoggedIn","books","currentlyReading","wantToRead","read","dispatch","onBooksLoaded","setBook","onBookUpdate","useEffect","BooksAPI","then","shelf","res","shelfData","name","onClick","history","push","map","key","id","to","pathname"],"mappings":"wGAAA,oBAuCeA,IApCF,SAACC,GACb,OACC,yBAAKC,UAAU,QACd,yBAAKA,UAAU,YACf,yBAAKA,UAAU,aAAaC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,MACtDJ,EAAMK,KAAKC,WAAWC,UACvB,yBAAKC,IAAKR,EAAMK,KAAKC,WAAWC,UAAWN,UAAU,WAAWQ,IAAKT,EAAMK,KAAKK,QAChF,yBAAKT,UAAU,gCAIjB,yBAAKA,UAAU,sBACd,4BAAQU,SAAU,SAACC,GAAD,OAClBZ,EAAMa,WAAWb,EAAMK,KAAKO,EAAME,OAAOC,QAAQC,aAAa,QAC9D,4BAAQD,MAAM,OAAOE,UAAQ,GAA7B,cACA,4BAAQF,MAAM,mBAAmBd,UAAgC,qBAApBD,EAAMK,KAAKa,MAA8B,iBAAmB,MAAzG,qBACA,4BAAQH,MAAM,aAAad,UAA+B,eAAnBD,EAAMK,KAAKa,MAAuB,iBAAmB,MAA5F,gBACA,4BAAQH,MAAM,OAAOd,UAA+B,SAAnBD,EAAMK,KAAKa,MAAiB,iBAAmB,MAAhF,QACA,4BAAQH,MAAM,OAAOd,UAAgC,SAApBD,EAAMK,KAAKa,MAAkB,iBAAmB,MAAjF,WAID,yBAAKjB,UAAU,cAAcD,EAAMK,KAAKK,OACxC,yBAAKT,UAAU,gBAAgBD,EAAMK,KAAKc,SAEzCnB,EAAMK,KAAKe,aACV,uBAAGC,KAAMrB,EAAMK,KAAKe,YAAaN,OAAO,SAASb,UAAU,aAC1D,+C,iCC9BN,oEA2FgBqB,uBArBQ,SAAAJ,GACtB,MAAO,CACLK,KAAML,EAAMK,KACZC,SAAUN,EAAMO,WAChBC,MAAOR,EAAMQ,MACbC,iBAAkBT,EAAMS,iBACxBC,WAAYV,EAAMU,WAClBC,KAAMX,EAAMW,SAIW,SAACC,GAC1B,MAAO,CACLC,cAAe,SAACL,GACdI,EAASE,YAAQN,KAEnBO,aAAc,SAAA5B,GACZyB,EAASjB,YAAWR,QAIViB,EAnFhB,SAAiBtB,GACfkC,qBAAW,WACTC,MAAuBC,MAAK,SAACV,GAC3B1B,EAAM+B,cAAcL,QAErB,IAEH,IAAMb,EAAa,SAACR,EAAMgC,GACxBhC,EAAKa,MAAQmB,EACbF,IAAoB9B,GAAM+B,MAAK,SAACE,GAC9BtC,EAAMiC,aAAa5B,OAGfkC,EAAY,CAAC,CACjBC,KAAM,oBACNd,MAAO1B,EAAM2B,kBACZ,CACDa,KAAM,eACNd,MAAO1B,EAAM4B,YACZ,CACDY,KAAM,OACNd,MAAO1B,EAAM6B,OAEjB,OACC,yBAAK5B,UAAU,cACN,yBAAKA,UAAU,oBACb,uCACA,yBAAKA,UAAU,gBACb,4BACAwC,QAAY,kBAAOzC,EAAM0C,QAAQC,KAAK,YADtC,aAKJ,yBAAK1C,UAAU,sBACb,6BACGsC,EAAUK,KAAI,SAAAP,GACb,OAAQ,yBAAKpC,UAAU,YAAY4C,IAAKR,EAAMG,MAC5C,wBAAIvC,UAAU,mBAAmBoC,EAAMG,MACvC,yBAAKvC,UAAU,mBACb,wBAAIA,UAAU,cACXoC,EAAMX,MAAMkB,KAAI,SAACvC,GAAD,OACjB,wBAAIwC,IAAKxC,EAAKyC,IAAI,kBAAC,IAAD,CAAMzC,KAAMA,EAAMQ,WAAaA,gBAQ7D,yBAAKZ,UAAU,eACb,kBAAC,IAAD,CAAM8C,GAAI,CACNC,SAAU,YADd","file":"static/js/4.4402c027.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Book = (props) => {\r\n\treturn (\r\n\t\t<div className=\"book\">\r\n\t\t\t<div className=\"book-top\">\r\n\t\t\t<div className=\"book-cover\" style={{ width: 128, height: 193}}>\r\n\t\t\t\t{(props.book.imageLinks.thumbnail)?\r\n\t\t\t\t(<img src={props.book.imageLinks.thumbnail} className=\"book-img\" alt={props.book.title}/>):\r\n\t\t\t\t(<div className=\"book-img image-placeholder\"></div>)\r\n\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"book-shelf-changer\">\r\n\t\t\t\t<select onChange={(event)=>\r\n\t\t\t\tprops.updateBook(props.book,event.target.value)} defaultValue=\"move\">\r\n\t\t\t\t<option value=\"move\" disabled>Move to...</option>\r\n\t\t\t\t<option value=\"currentlyReading\" className={(props.book.state ==='currentlyReading')? 'selected-shelf' : null}>Currently Reading</option>\r\n\t\t\t\t<option value=\"wantToRead\" className={(props.book.state==='wantToRead')? 'selected-shelf' : null}>Want to Read</option>\r\n\t\t\t\t<option value=\"read\" className={(props.book.state==='read')? 'selected-shelf' : null}>Read</option>\r\n\t\t\t\t<option value=\"none\" className={(props.book.state ==='none')? 'selected-shelf' : null}>None</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"book-title\">{props.book.title}</div>\r\n\t\t\t<div className=\"book-authors\">{props.book.authors}</div>\r\n\t\t\t{\r\n\t\t\t\tprops.book.previewLink && (\r\n\t\t\t\t\t<a href={props.book.previewLink} target=\"_blank\" className=\"book-link\">\r\n\t\t\t\t\t\t<span>Read More</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\nexport default Book;","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport { invalidate, setBook, updateBook } from './redux-module/action-creator';\r\nimport Book from './Book';\r\n\r\nimport * as BooksAPI from './BooksAPI'\r\n\r\nfunction MyReads(props) {\r\n  useEffect( () => {\r\n    BooksAPI.getAllBooks().then((books)=>{\r\n      props.onBooksLoaded(books)\r\n     });\r\n  }, []);\r\n\r\n  const updateBook = (book, shelf) => {\r\n    book.state = shelf;\r\n    BooksAPI.updateBook(book).then((res) => {\r\n      props.onBookUpdate(book)\r\n    })\r\n  }\r\n    const shelfData = [{\r\n      name: 'Currently Reading',\r\n      books: props.currentlyReading,\r\n    }, {\r\n      name: 'Want to Read',\r\n      books: props.wantToRead,\r\n    }, {\r\n      name: 'Read',\r\n      books: props.read,\r\n    }];\r\n\t\treturn (\r\n\t\t\t<div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n              <h1>MyReads</h1>\r\n              <div className=\"profile-info\">\r\n                <button\r\n                onClick = { () =>  props.history.push('/login') }\r\n                >Log out</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n              <div>\r\n                {shelfData.map(shelf => {\r\n                  return (<div className=\"bookshelf\" key={shelf.name}>\r\n                    <h2 className=\"bookshelf-title\">{shelf.name}</h2>\r\n                    <div className=\"bookshelf-books\">\r\n                      <ol className=\"books-grid\">\r\n                        {shelf.books.map((book)=>\r\n                        <li key={book.id}><Book book={book} updateBook= {updateBook}/></li>\r\n                      )}\r\n                      </ol>\r\n                    </div>\r\n                  </div>)\r\n                })}\r\n              </div>\r\n            </div>\r\n            <div className=\"open-search\">\r\n              <Link to={{\r\n                  pathname: '/search',\r\n                }}>\r\n                  Add a Book\r\n                </Link>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\t\t\t)\r\n\t\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n    isLogged: state.isLoggedIn,\r\n    books: state.books,\r\n    currentlyReading: state.currentlyReading,\r\n    wantToRead: state.wantToRead,\r\n    read: state.read,\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onBooksLoaded: (books) => {\r\n      dispatch(setBook(books))\r\n    },\r\n    onBookUpdate: book => {\r\n      dispatch(updateBook(book));\r\n    },\r\n  }\r\n}\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(MyReads);"],"sourceRoot":""}